usethis::create_package(".")
rextendr::document()
rextendr::document()
rextendr::document()
devtools::load_all(".")
is_dna("AGTC")
is_dna("ttehet")
code <- r"(
fn alphabet() -> String {
alphabet::DNA.to_string()
}
)"
rust_source(code = code, dependencies = list("segul = 0.20.2"))
library(rextendr)
code <- r"(
code <- r"(
fn alphabet() -> String {
alphabet::DNA.to_string()
}
)"
rust_source(code = code, dependencies = list("segul = 0.20.2"))
rust_source(code = code, dependencies = list("segul"))
rust_source(code = code, dependencies = list("[segul = "."]"))
rust_source(code = code, dependencies = list([segul = "."]))
rust_source(code = code, dependencies = list([segul = "."])
rust_source(code = code, dependencies = list[segul = "."]
alphabet()
e
code <- r"(
fn alphabet() -> String {
alphabet::DNA.to_string()
}
)"
rust_source(code = code, dependencies = list[segul = "."]
alphabet()
code <- r"(
fn alphabet() -> String {
alphabet::DNA.to_string()
}
)"
rust_source(code = code, dependencies = list[segul = "*"]
alphabet()
rust_source(code = code, dependencies = list[segul = "*"]
alphabet()
segul::helper::alphabet::DNA
code <- r"(
fn alphabet() -> String {
segul::helper::alphabet::DNA
}
)"
rust_source(code = code, dependencies = list[segul = "*"]
alphabet()
code <- r"(
fn alphabet() -> String {
segul::helper::alphabet::DNA_UPPERCASE
}
)"
rust_source(code = code, dependencies = list[segul = "*"]
alphabet()
code <- r"(
fn alphabet() -> String {
segul::helper::alphabet::DNA_UPPERCASE
}
)"
rust_source(code = code, dependencies = list[segul = "*"]
code <- r"(
fn alphabet() -> String {
segul::helper::alphabet::DNA_UPPERCASE
}
)"
rust_source(code = code, dependencies = list([segul = "*"])
code <- r"(
fn alphabet() -> String {
segul::helper::alphabet::DNA_UPPERCASE
}
)"
rust_source(code = code, dependencies = list(segul = "*")
code <- r"(
fn alphabet() -> String {
segul::helper::alphabet::DNA_UPPERCASE
}
)"
rust_source(code = code, dependencies = list("segul")
code <- r"(
fn alphabet() -> String {
segul::helper::alphabet::DNA_UPPERCASE
}
)"
rust_source(code = code, dependencies = list("segul"))
code <- r"(
fn alphabet() -> String {
segul::helper::alphabet::DNA_UPPERCASE
}
)"
rust_source(code = code, dependencies = ["segul"])
code <- r"(
fn alphabet() -> String {
segul::helper::alphabet::DNA_UPPERCASE
}
)"
rust_source(code = code, dependencies = list(segul= "*"))
code <- r"(
fn alphabet() -> String {
segul::helper::alphabet::DNA_STR_UPPERCASE
}
)"
rust_source(code = code, dependencies = list(segul= "*"))
code <- r"(
use segul::helper::alphabet;
fn alphabet() -> String {
alphabet::DNA_STR_UPPERCASE.to_string()
}
)"
rust_source(code = code, dependencies = list(segul= "*"))
alphabet()
code <- r"(
use segul::helper::alphabet;
fn alphabet() -> String {
alphabet::DNA_STR_UPPERCASE.to_string()
}
)"
rust_source(code = code, dependencies = list(segul= "*"))
alphabet()
alphabet()
code <- r"(
fn alphabet() -> String {
segul::helper::alphabet::DNA_STR_UPPERCASE.to_string()
}
)"
rust_source(code = code, dependencies = list(segul= "*"))
alphabet()
code <- r"(
use segul::helper::alphabet;
fn alphabet() -> String {
alphabet::DNA_STR_UPPERCASE.to_string()
}
)"
rust_source(code = code, dependencies = list(segul= "*"))
alphabet()
code <- r"(
use segul::helper::alphabet;
fn alphabet() -> String {
alphabet::DNA_STR_UPPERCASE.to_string()
}
)"
rust_source(code = code, dependencies = list(segul= "*"))
devtools::load_all(".")
library(rextendr)
is_dna("AGTC")
is_dna("ttehet")
code <- r"(
use segul::helper::alphabet;
fn alphabet() -> String {
alphabet::DNA_STR_UPPERCASE.to_string()
}
)"
rust_source(code = code, dependencies = list(segul= "*"))
alphabet()
alphabet()
code <- r"(
use segul::helper::alphabet;
#[extendr]
fn alphabet() -> String {
alphabet::DNA_STR_UPPERCASE.to_string()
}
)"
rust_source(code = code, dependencies = list(segul = "*"))
alphabet()
